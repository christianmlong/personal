<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.0//EN" "http://www.w3.org/TR/2001/REC-SVG-20010904/DTD/svg10.dtd">
<svg xmlns="http://www.w3.org/2000/svg">
<g font-family="Source Code Pro" font-size="10px">
<text x="0" y="10" xml:space="preserve"><tspan fill="#b12ecc">class</tspan>&#160;<tspan fill="#00aeae">MultiDictBackedRuleset</tspan>(<tspan fill="#1a1a1a">BaseItemRulesetTester</tspan>):</text>
<text x="0" y="25" xml:space="preserve">&#160;&#160;&#160;&#160;<tspan fill="#0f1d94">&quot;&quot;&quot;</tspan></text>
<text x="0" y="40" xml:space="preserve"><tspan fill="#0f1d94">&#160;&#160;&#160;&#160;Some&#160;Rulesets&#160;just&#160;use&#160;a&#160;plain&#160;old&#160;python&#160;dict&#160;as&#160;their&#160;data&#160;store.&#160;Others</tspan></text>
<text x="0" y="55" xml:space="preserve"><tspan fill="#0f1d94">&#160;&#160;&#160;&#160;use&#160;a&#160;custom&#160;object,&#160;an&#160;instance&#160;of&#160;MultiDict.&#160;This&#160;is&#160;the&#160;base&#160;class&#160;for</tspan></text>
<text x="0" y="70" xml:space="preserve"><tspan fill="#0f1d94">&#160;&#160;&#160;&#160;classes&#160;that&#160;test&#160;Rulesets&#160;that&#160;use&#160;MultiDict&#160;as&#160;a&#160;data&#160;store.</tspan></text>
<text x="0" y="85" xml:space="preserve"><tspan fill="#0f1d94">&#160;&#160;&#160;&#160;&quot;&quot;&quot;</tspan></text>
<text x="0" y="100" xml:space="preserve">&#160;&#160;&#160;&#160;<tspan fill="#b12ecc">def</tspan>&#160;<tspan fill="#00aeae">__init__</tspan>(<tspan fill="#1a1a1a">self</tspan>):</text>
<text x="0" y="115" xml:space="preserve">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<tspan fill="#1a1a1a">BaseItemRulesetTester</tspan>.<tspan fill="#1a1a1a">__init__</tspan>(<tspan fill="#1a1a1a">self</tspan>)</text>
<text x="0" y="130" xml:space="preserve">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<tspan fill="#1a1a1a">self</tspan>.<tspan fill="#1a1a1a">allowed_completeness_exception</tspan>&#160;=&#160;<tspan fill="#1a1a1a">None</tspan></text>
<text x="0" y="145" xml:space="preserve">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<tspan fill="#1a1a1a">self</tspan>.<tspan fill="#1a1a1a">allowed_collision_exception</tspan>&#160;=&#160;<tspan fill="#1a1a1a">None</tspan></text>
<text x="0" y="160" xml:space="preserve"></text>
<text x="0" y="175" xml:space="preserve"></text>
<text x="0" y="190" xml:space="preserve"></text>
<text x="0" y="205" xml:space="preserve"></text>
<text x="0" y="220" xml:space="preserve">&#160;&#160;&#160;&#160;<tspan fill="#b12ecc">def</tspan>&#160;<tspan fill="#00aeae">bla_bla_bla</tspan>(<tspan fill="#1a1a1a">self</tspan>):</text>
<text x="0" y="235" xml:space="preserve"></text>
<text x="0" y="250" xml:space="preserve"><tspan fill="#8a8a8a">#&#160;Use&#160;code&#160;below&#160;this&#160;line</tspan></text>
<text x="0" y="265" xml:space="preserve"><tspan fill="#8a8a8a">#&#160;===========================================================</tspan></text>
<text x="0" y="280" xml:space="preserve"></text>
<text x="0" y="295" xml:space="preserve">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<tspan fill="#b12ecc">if</tspan>&#160;<tspan fill="#1a1a1a">self</tspan>.<tspan fill="#1a1a1a">allowed_collision_exception</tspan>:</text>
<text x="0" y="310" xml:space="preserve">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<tspan fill="#1a1a1a">self</tspan>.<tspan fill="#1a1a1a">_run_with_exception</tspan>(<tspan fill="#1a1a1a">self</tspan>.<tspan fill="#1a1a1a">_test_for_collision</tspan>,</text>
<text x="0" y="325" xml:space="preserve">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<tspan fill="#1a1a1a">self</tspan>.<tspan fill="#1a1a1a">allowed_collision_exception</tspan>,</text>
<text x="0" y="340" xml:space="preserve">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;)</text>
<text x="0" y="355" xml:space="preserve">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<tspan fill="#b12ecc">else</tspan>:</text>
<text x="0" y="370" xml:space="preserve">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<tspan fill="#1a1a1a">self</tspan>.<tspan fill="#1a1a1a">_test_for_collision</tspan>()</text>
<text x="0" y="385" xml:space="preserve"></text>
<text x="0" y="400" xml:space="preserve">&#160;&#160;&#160;&#160;<tspan fill="#b12ecc">if</tspan>&#160;<tspan fill="#1a1a1a">self</tspan>.<tspan fill="#1a1a1a">allowed_collision_exception</tspan>:</text>
<text x="0" y="415" xml:space="preserve">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<tspan fill="#1a1a1a">self</tspan>.<tspan fill="#1a1a1a">run_with_exception</tspan>(<tspan fill="#1a1a1a">self</tspan>.<tspan fill="#1a1a1a">test_for_collision</tspan>,</text>
<text x="0" y="430" xml:space="preserve">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<tspan fill="#1a1a1a">self</tspan>.<tspan fill="#1a1a1a">allowed_collision_exception</tspan>,</text>
<text x="0" y="445" xml:space="preserve">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;)</text>
<text x="0" y="460" xml:space="preserve">&#160;&#160;&#160;&#160;<tspan fill="#b12ecc">else</tspan>:</text>
<text x="0" y="475" xml:space="preserve">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<tspan fill="#1a1a1a">self</tspan>.<tspan fill="#1a1a1a">test_for_collision</tspan>()</text>
<text x="0" y="490" xml:space="preserve"></text>
<text x="0" y="505" xml:space="preserve">&#160;&#160;&#160;&#160;<tspan fill="#b12ecc">def</tspan>&#160;<tspan fill="#00aeae">test_for_completeness</tspan>(<tspan fill="#1a1a1a">self</tspan>):</text>
<text x="0" y="520" xml:space="preserve">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<tspan fill="#0f1d94">&quot;&quot;&quot;</tspan></text>
<text x="0" y="535" xml:space="preserve"><tspan fill="#0f1d94">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Check&#160;all&#160;the&#160;keys&#160;in&#160;self.out.ruleset.reference_dict&#160;against&#160;the&#160;whole&#160;set</tspan></text>
<text x="0" y="550" xml:space="preserve"><tspan fill="#0f1d94">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;of&#160;possibilities.&#160;Make&#160;sure&#160;that&#160;all&#160;possible&#160;cases&#160;are&#160;covered&#160;by&#160;one&#160;of</tspan></text>
<text x="0" y="565" xml:space="preserve"><tspan fill="#0f1d94">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;the&#160;reference&#160;keys&#160;in&#160;self.out.ruleset.reference_dict.</tspan></text>
<text x="0" y="580" xml:space="preserve"><tspan fill="#0f1d94">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&quot;&quot;&quot;</tspan></text>
<text x="0" y="595" xml:space="preserve">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<tspan fill="#1a1a1a">key_space</tspan>&#160;=&#160;<tspan fill="#1a1a1a">list</tspan>(<tspan fill="#1a1a1a">itertools</tspan>.<tspan fill="#1a1a1a">product</tspan>(*<tspan fill="#1a1a1a">self</tspan>.<tspan fill="#1a1a1a">out</tspan>.<tspan fill="#1a1a1a">ruleset</tspan>.<tspan fill="#1a1a1a">dimensions</tspan>))</text>
<text x="0" y="610" xml:space="preserve">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<tspan fill="#1a1a1a">reference_keys</tspan>&#160;=&#160;<tspan fill="#1a1a1a">self</tspan>.<tspan fill="#1a1a1a">out</tspan>.<tspan fill="#1a1a1a">ruleset</tspan>.<tspan fill="#1a1a1a">reference_dict</tspan>.<tspan fill="#1a1a1a">keys</tspan>()</text>
<text x="0" y="625" xml:space="preserve"></text>
<text x="0" y="640" xml:space="preserve">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<tspan fill="#b12ecc">for</tspan>&#160;<tspan fill="#1a1a1a">reference_key</tspan>&#160;in&#160;<tspan fill="#1a1a1a">reference_keys</tspan>:</text>
<text x="0" y="655" xml:space="preserve">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<tspan fill="#8a8a8a">#&#160;Each&#160;reference&#160;key&#160;is&#160;a&#160;tuple.&#160;The&#160;elements&#160;of&#160;the&#160;tuple&#160;are&#160;integers</tspan></text>
<text x="0" y="670" xml:space="preserve">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<tspan fill="#8a8a8a">#&#160;or&#160;tuples&#160;of&#160;integers.&#160;Wrap&#160;all&#160;the&#160;integer&#160;elements&#160;inside&#160;tuples,&#160;so</tspan></text>
<text x="0" y="685" xml:space="preserve">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<tspan fill="#8a8a8a">#&#160;all&#160;the&#160;elements&#160;of&#160;prepared_ref_key&#160;are&#160;iterable.</tspan></text>
<text x="0" y="700" xml:space="preserve">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<tspan fill="#1a1a1a">prepared_ref_key</tspan>&#160;=&#160;<tspan fill="#1a1a1a">itertools</tspan>.<tspan fill="#1a1a1a">imap</tspan>(<tspan fill="#1a1a1a">self</tspan>.<tspan fill="#1a1a1a">wrapScalarValueAndSort</tspan>,</text>
<text x="0" y="715" xml:space="preserve">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<tspan fill="#1a1a1a">reference_key</tspan>,</text>
<text x="0" y="730" xml:space="preserve">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;)</text>
<text x="0" y="745" xml:space="preserve"></text>
<text x="0" y="760" xml:space="preserve">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<tspan fill="#8a8a8a">#&#160;Take&#160;the&#160;distilled&#160;reference&#160;key&#160;and&#160;explode&#160;it&#160;in&#160;to&#160;keys&#160;which&#160;are</tspan></text>
<text x="0" y="775" xml:space="preserve">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<tspan fill="#8a8a8a">#&#160;tuples&#160;of&#160;integers.</tspan></text>
<text x="0" y="790" xml:space="preserve">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<tspan fill="#b12ecc">for</tspan>&#160;<tspan fill="#1a1a1a">exploded_key</tspan>&#160;in&#160;<tspan fill="#1a1a1a">itertools</tspan>.<tspan fill="#1a1a1a">product</tspan>(*<tspan fill="#1a1a1a">prepared_ref_key</tspan>):</text>
<text x="0" y="805" xml:space="preserve">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<tspan fill="#8a8a8a">#&#160;If&#160;we&#160;have&#160;overlap&#160;in&#160;the&#160;keys,&#160;this&#160;will&#160;catch&#160;it.</tspan></text>
<text x="0" y="820" xml:space="preserve">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<tspan fill="#1a1a1a">base_key</tspan>&#160;=&#160;<tspan fill="#1a1a1a">self</tspan>.<tspan fill="#1a1a1a">out</tspan>.<tspan fill="#1a1a1a">ruleset</tspan>[<tspan fill="#1a1a1a">exploded_key</tspan>]</text>
<text x="0" y="835" xml:space="preserve">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<tspan fill="#b12ecc">try</tspan>:</text>
<text x="0" y="850" xml:space="preserve">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<tspan fill="#8a8a8a">#&#160;Test&#160;items&#160;have&#160;a&#160;&quot;marker_value&quot;</tspan></text>
<text x="0" y="865" xml:space="preserve">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<tspan fill="#1a1a1a">marker_value</tspan>&#160;=&#160;<tspan fill="#1a1a1a">base_key</tspan>.<tspan fill="#1a1a1a">marker_value</tspan></text>
<text x="0" y="880" xml:space="preserve">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<tspan fill="#b12ecc">except</tspan>&#160;<tspan fill="#1a1a1a">AttributeError</tspan>:</text>
<text x="0" y="895" xml:space="preserve">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<tspan fill="#8a8a8a">#&#160;Production&#160;items&#160;do&#160;not&#160;have&#160;&quot;marker_value&quot;</tspan></text>
<text x="0" y="910" xml:space="preserve">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<tspan fill="#1a1a1a">marker_value</tspan>&#160;=&#160;<tspan fill="#1a1a1a">base_key</tspan></text>
<text x="0" y="925" xml:space="preserve">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<tspan fill="#1a1a1a">diagnosic_info</tspan>&#160;=&#160;(<tspan fill="#1a1a1a">marker_value</tspan>,</text>
<text x="0" y="940" xml:space="preserve">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<tspan fill="#1a1a1a">reference_counter</tspan>,</text>
<text x="0" y="955" xml:space="preserve">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<tspan fill="#1a1a1a">reference_keys</tspan>[<tspan fill="#1a1a1a">reference_counter</tspan>],</text>
<text x="0" y="970" xml:space="preserve">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;)</text>
<text x="0" y="985" xml:space="preserve">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<tspan fill="#b12ecc">if</tspan>&#160;<tspan fill="#1a1a1a">rule_names</tspan>.<tspan fill="#1a1a1a">has_key</tspan>(<tspan fill="#1a1a1a">exploded_key</tspan>):</text>
<text x="0" y="1000" xml:space="preserve">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<tspan fill="#1a1a1a">rule_names</tspan>[<tspan fill="#1a1a1a">exploded_key</tspan>].<tspan fill="#1a1a1a">append</tspan>(<tspan fill="#1a1a1a">diagnosic_info</tspan>)</text>
<text x="0" y="1015" xml:space="preserve">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<tspan fill="#b12ecc">else</tspan>:</text>
<text x="0" y="1030" xml:space="preserve">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<tspan fill="#1a1a1a">rule_names</tspan>[<tspan fill="#1a1a1a">exploded_key</tspan>]&#160;=&#160;[<tspan fill="#1a1a1a">diagnosic_info</tspan>]</text>
<text x="0" y="1045" xml:space="preserve"></text>
<text x="0" y="1060" xml:space="preserve">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<tspan fill="#b12ecc">try</tspan>:</text>
<text x="0" y="1075" xml:space="preserve">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<tspan fill="#1a1a1a">combinatorial_space</tspan>.<tspan fill="#1a1a1a">remove</tspan>(<tspan fill="#1a1a1a">exploded_key</tspan>)</text>
<text x="0" y="1090" xml:space="preserve">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<tspan fill="#b12ecc">except</tspan>&#160;<tspan fill="#1a1a1a">ValueError</tspan>:</text>
<text x="0" y="1105" xml:space="preserve">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<tspan fill="#b12ecc">print</tspan>&#160;<tspan fill="#4070a0">&quot;</tspan><tspan fill="#4070a0">Duplicate&#160;exploded&#160;key.&#160;Rule&#160;that&#160;was&#160;violated:&#160;</tspan><tspan fill="#4070a0">%s</tspan><tspan fill="#4070a0">&quot;</tspan>&#160;%&#160;<tspan fill="#1a1a1a">self</tspan>.<tspan fill="#1a1a1a">out</tspan>.<tspan fill="#1a1a1a">ruleset</tspan>[<tspan fill="#1a1a1a">exploded_key</tspan>].<tspan fill="#1a1a1a">marker_value</tspan></text>
<text x="0" y="1120" xml:space="preserve">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<tspan fill="#b12ecc">raise</tspan>&#160;<tspan fill="#1a1a1a">pickpack_errors</tspan>.<tspan fill="#1a1a1a">ApplicationError</tspan>(<tspan fill="#4070a0">&quot;</tspan><tspan fill="#4070a0">Exploded&#160;key&#160;not&#160;found&#160;</tspan><tspan fill="#4070a0">%s</tspan><tspan fill="#4070a0">&#160;</tspan><tspan fill="#4070a0">&quot;</tspan>&#160;%&#160;<tspan fill="#1a1a1a">str</tspan>(<tspan fill="#1a1a1a">exploded_key</tspan>))</text>
<text x="0" y="1135" xml:space="preserve"></text>
<text x="0" y="1150" xml:space="preserve"></text>
<text x="0" y="1165" xml:space="preserve"><tspan fill="#8a8a8a">#&#160;===========================================================</tspan></text>
<text x="0" y="1180" xml:space="preserve"><tspan fill="#8a8a8a">#&#160;Use&#160;code&#160;above&#160;this&#160;line</tspan></text>
<text x="0" y="1195" xml:space="preserve"></text>
<text x="0" y="1210" xml:space="preserve">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<tspan fill="#8a8a8a">#&#160;etc&#160;etc</tspan></text>
<text x="0" y="1225" xml:space="preserve"></text></g></svg>
