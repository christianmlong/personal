# pylint: disable=too-many-lines,too-many-public-methods,line-too-long,missing-docstring
"""
Tests for the Shopfloor Monitor service.

DO NOT EDIT THIS FILE
IT IS AUTOMATICALLY GENERATED
BY write_shopfloor_monitor_service_tests.py



"""

import requests
from nose import tools

from CML_Pickpack.pickpack_modules import pickpack_constants
from CML_Pickpack.pickpack_modules.test import utility_functions_for_testing

from CML_Pickpack.pickpack_modules.test.write_endpoint_tests import REQUESTS_TIMEOUT

if pickpack_constants.SHOW_FULL_DIFF:
    # Force Nose to output the full diff
    from unittest import TestCase
    TestCase.maxDiff = None


class TestShopfloorMonitorService(object):


    def __init__(self):
        pass

    @staticmethod
    def call_summary_service(scale,
                             show_backorder,
                             expected_result,
                            ):
        """
        Call the Shopfloor Monitor summary service
        """
        parameters = {'scale' : scale,
                      'show_backorder' : show_backorder,
                     }
        response = requests.get('http://10.52.121.146:8082/shopfloor_monitor/j_status_orders',
                                params = parameters,
                                timeout = REQUESTS_TIMEOUT,
                               )
        actual_result = utility_functions_for_testing.read_json_from_response(response)
        tools.assert_equal(actual_result, expected_result)


    def test_wcc_backorder(self):
        expected_result = {u'normal_backorder_packed': 0,
 u'normal_backorder_pick_slip_printed': 1,
 u'normal_backorder_ready_to_print': 4,
 u'service_files_backorder_packed': 1,
 u'service_files_backorder_pick_slip_printed': 14,
 u'service_files_backorder_ready_to_print': 6,
 u'signature_service_backorder_packed': 3,
 u'signature_service_backorder_pick_slip_printed': 16,
 u'signature_service_backorder_ready_to_print': 57,
 u'today_sure_backorder_packed': 0,
 u'today_sure_backorder_pick_slip_printed': 1,
 u'today_sure_backorder_ready_to_print': 5}
        self.call_summary_service('wcc',
                                  'true',
                                  expected_result,
                                 )


    def test_wcc_ordinary(self):
        expected_result = {u'normal_can_ship_tomorrow_packed': 0,
 u'normal_can_ship_tomorrow_pick_slip_printed': 3,
 u'normal_can_ship_tomorrow_ready_to_print': 3,
 u'normal_should_ship_today_packed': 3,
 u'normal_should_ship_today_pick_slip_printed': 21,
 u'normal_should_ship_today_ready_to_print': 221,
 u'service_files_should_ship_today_packed': 0,
 u'service_files_should_ship_today_pick_slip_printed': 14,
 u'service_files_should_ship_today_ready_to_print': 8,
 u'signature_service_can_ship_tomorrow_packed': 1,
 u'signature_service_can_ship_tomorrow_pick_slip_printed': 33,
 u'signature_service_can_ship_tomorrow_ready_to_print': 43,
 u'signature_service_should_ship_today_packed': 3,
 u'signature_service_should_ship_today_pick_slip_printed': 10,
 u'signature_service_should_ship_today_ready_to_print': 475,
 u'today_sure_can_ship_tomorrow_packed': 1,
 u'today_sure_can_ship_tomorrow_pick_slip_printed': 3,
 u'today_sure_can_ship_tomorrow_ready_to_print': 3,
 u'today_sure_should_ship_today_packed': 0,
 u'today_sure_should_ship_today_pick_slip_printed': 10,
 u'today_sure_should_ship_today_ready_to_print': 7}
        self.call_summary_service('wcc',
                                  'false',
                                  expected_result,
                                 )


    def test_parts_backorder(self):
        expected_result = {u'normal_backorder_packed': 0,
 u'normal_backorder_pick_slip_printed': 0,
 u'normal_backorder_ready_to_print': 15,
 u'service_files_backorder_packed': 0,
 u'service_files_backorder_pick_slip_printed': 2,
 u'service_files_backorder_ready_to_print': 34,
 u'signature_service_backorder_packed': 0,
 u'signature_service_backorder_pick_slip_printed': 10,
 u'signature_service_backorder_ready_to_print': 75,
 u'today_sure_backorder_packed': 0,
 u'today_sure_backorder_pick_slip_printed': 0,
 u'today_sure_backorder_ready_to_print': 2}
        self.call_summary_service('parts',
                                  'true',
                                  expected_result,
                                 )


    def test_parts_ordinary(self):
        expected_result = {u'normal_can_ship_tomorrow_packed': 0,
 u'normal_can_ship_tomorrow_pick_slip_printed': 0,
 u'normal_can_ship_tomorrow_ready_to_print': 16,
 u'normal_should_ship_today_packed': 1,
 u'normal_should_ship_today_pick_slip_printed': 8,
 u'normal_should_ship_today_ready_to_print': 106,
 u'service_files_should_ship_today_packed': 1,
 u'service_files_should_ship_today_pick_slip_printed': 8,
 u'service_files_should_ship_today_ready_to_print': 28,
 u'signature_service_can_ship_tomorrow_packed': 7,
 u'signature_service_can_ship_tomorrow_pick_slip_printed': 14,
 u'signature_service_can_ship_tomorrow_ready_to_print': 65,
 u'signature_service_should_ship_today_packed': 2,
 u'signature_service_should_ship_today_pick_slip_printed': 17,
 u'signature_service_should_ship_today_ready_to_print': 29,
 u'today_sure_can_ship_tomorrow_packed': 0,
 u'today_sure_can_ship_tomorrow_pick_slip_printed': 1,
 u'today_sure_can_ship_tomorrow_ready_to_print': 2,
 u'today_sure_should_ship_today_packed': 1,
 u'today_sure_should_ship_today_pick_slip_printed': 6,
 u'today_sure_should_ship_today_ready_to_print': 8}
        self.call_summary_service('parts',
                                  'false',
                                  expected_result,
                                 )


    def test_both_backorder(self):
        expected_result = {u'normal_backorder_packed': 0,
 u'normal_backorder_pick_slip_printed': 0,
 u'normal_backorder_ready_to_print': 3,
 u'service_files_backorder_packed': 1,
 u'service_files_backorder_pick_slip_printed': 1,
 u'service_files_backorder_ready_to_print': 10,
 u'signature_service_backorder_packed': 1,
 u'signature_service_backorder_pick_slip_printed': 0,
 u'signature_service_backorder_ready_to_print': 19,
 u'today_sure_backorder_packed': 0,
 u'today_sure_backorder_pick_slip_printed': 0,
 u'today_sure_backorder_ready_to_print': 1}
        self.call_summary_service('both',
                                  'true',
                                  expected_result,
                                 )


    def test_both_ordinary(self):
        expected_result = {u'normal_can_ship_tomorrow_packed': 0,
 u'normal_can_ship_tomorrow_pick_slip_printed': 0,
 u'normal_can_ship_tomorrow_ready_to_print': 2,
 u'normal_should_ship_today_packed': 1,
 u'normal_should_ship_today_pick_slip_printed': 21,
 u'normal_should_ship_today_ready_to_print': 34,
 u'service_files_should_ship_today_packed': 2,
 u'service_files_should_ship_today_pick_slip_printed': 0,
 u'service_files_should_ship_today_ready_to_print': 11,
 u'signature_service_can_ship_tomorrow_packed': 2,
 u'signature_service_can_ship_tomorrow_pick_slip_printed': 0,
 u'signature_service_can_ship_tomorrow_ready_to_print': 19,
 u'signature_service_should_ship_today_packed': 5,
 u'signature_service_should_ship_today_pick_slip_printed': 2,
 u'signature_service_should_ship_today_ready_to_print': 27,
 u'today_sure_can_ship_tomorrow_packed': 0,
 u'today_sure_can_ship_tomorrow_pick_slip_printed': 0,
 u'today_sure_can_ship_tomorrow_ready_to_print': 2,
 u'today_sure_should_ship_today_packed': 1,
 u'today_sure_should_ship_today_pick_slip_printed': 0,
 u'today_sure_should_ship_today_ready_to_print': 6}
        self.call_summary_service('both',
                                  'false',
                                  expected_result,
                                 )


    def test_all_backorder(self):
        expected_result = {u'normal_backorder_packed': 0,
 u'normal_backorder_pick_slip_printed': 1,
 u'normal_backorder_ready_to_print': 22,
 u'service_files_backorder_packed': 2,
 u'service_files_backorder_pick_slip_printed': 17,
 u'service_files_backorder_ready_to_print': 50,
 u'signature_service_backorder_packed': 4,
 u'signature_service_backorder_pick_slip_printed': 26,
 u'signature_service_backorder_ready_to_print': 151,
 u'today_sure_backorder_packed': 0,
 u'today_sure_backorder_pick_slip_printed': 1,
 u'today_sure_backorder_ready_to_print': 8}
        self.call_summary_service('all',
                                  'true',
                                  expected_result,
                                 )


    def test_all_ordinary(self):
        expected_result = {u'normal_can_ship_tomorrow_packed': 0,
 u'normal_can_ship_tomorrow_pick_slip_printed': 3,
 u'normal_can_ship_tomorrow_ready_to_print': 21,
 u'normal_should_ship_today_packed': 5,
 u'normal_should_ship_today_pick_slip_printed': 50,
 u'normal_should_ship_today_ready_to_print': 361,
 u'service_files_should_ship_today_packed': 3,
 u'service_files_should_ship_today_pick_slip_printed': 22,
 u'service_files_should_ship_today_ready_to_print': 47,
 u'signature_service_can_ship_tomorrow_packed': 10,
 u'signature_service_can_ship_tomorrow_pick_slip_printed': 47,
 u'signature_service_can_ship_tomorrow_ready_to_print': 127,
 u'signature_service_should_ship_today_packed': 10,
 u'signature_service_should_ship_today_pick_slip_printed': 29,
 u'signature_service_should_ship_today_ready_to_print': 531,
 u'today_sure_can_ship_tomorrow_packed': 1,
 u'today_sure_can_ship_tomorrow_pick_slip_printed': 4,
 u'today_sure_can_ship_tomorrow_ready_to_print': 7,
 u'today_sure_should_ship_today_packed': 2,
 u'today_sure_should_ship_today_pick_slip_printed': 16,
 u'today_sure_should_ship_today_ready_to_print': 21}
        self.call_summary_service('all',
                                  'false',
                                  expected_result,
                                 )
